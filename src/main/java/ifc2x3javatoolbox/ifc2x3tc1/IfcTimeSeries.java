/* Generated By: IFC Tools Project EXPRESS TO JAVA COMPILER: Do not edit this file!! */
package ifc2x3javatoolbox.ifc2x3tc1;
/**
 * This is a default implementation of the entity IfcTimeSeries<br><br>
 *<br><br>
 * Copyright: CC BY-NC-SA 3.0 DE (cc) 2013 Eike Tauscher and Michael Theiler<br><br>
 * The whole package including this class is licensed under<br>
 * <a rel='license' href='http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.en/'>
 * Creative Commons Attribution-Non-Commercial-Share Alike 3.0 Germany</a>.<br><br>
 * If you are using the package or parts of it in any commercial way, a commercial license is required. 
 * Visit <a href='http://www.ifctoolsproject.com'>http://www.ifctoolsproject.com</a> for more information
 * or contact us directly: <a href='mailto:info@ifctoolsproject.com'>info@ifctoolsproject.com</a><br>
 */
public abstract class IfcTimeSeries extends InternalAccessClass implements IfcObjectReferenceSelect, IfcMetricValueSelect, ClassInterface
{
	private static final String[] nonInverseAttributes = new String[]{"IfcLabel","IfcText","IfcDateTimeSelect","IfcDateTimeSelect","IfcTimeSeriesDataTypeEnum","IfcDataOriginEnum","IfcLabel","IfcUnit"};
	private java.util.ArrayList<CloneableObject> stepParameter = null;
	private java.util.HashSet<ObjectChangeListener> listenerList = null;
	protected int stepLineNumber;
	/** Name is an DEMANDED attribute - may not be null**/
	protected IfcLabel Name;
	/** Description is an OPTIONAL attribute**/
	protected IfcText Description;
	/** StartTime is an DEMANDED attribute - may not be null**/
	protected IfcDateTimeSelect StartTime;
	/** EndTime is an DEMANDED attribute - may not be null**/
	protected IfcDateTimeSelect EndTime;
	/** TimeSeriesDataType is an DEMANDED attribute - may not be null**/
	protected IfcTimeSeriesDataTypeEnum TimeSeriesDataType;
	/** DataOrigin is an DEMANDED attribute - may not be null**/
	protected IfcDataOriginEnum DataOrigin;
	/** UserDefinedDataOrigin is an OPTIONAL attribute**/
	protected IfcLabel UserDefinedDataOrigin;
	/** Unit is an OPTIONAL attribute**/
	protected IfcUnit Unit;
	protected SET<IfcTimeSeriesReferenceRelationship> DocumentedBy_Inverse;
	/**
	* The default constructor.
	**/
	public IfcTimeSeries(){}

	private static final String[] attributes = new String[]{"Name","Description","StartTime","EndTime",
			"TimeSeriesDataType","DataOrigin","UserDefinedDataOrigin","Unit"};

	public String[] getAttributes(){
		return IfcTimeSeries.attributes;
	}

	/**
	* Constructs a new IfcTimeSeries object using the given parameters.
	*
	* @param Name DEMANDED parameter of type IfcLabel - may not be null.
	* @param Description OPTIONAL parameter of type IfcText
	* @param StartTime DEMANDED parameter of type IfcDateTimeSelect - may not be null.
	* @param EndTime DEMANDED parameter of type IfcDateTimeSelect - may not be null.
	* @param TimeSeriesDataType DEMANDED parameter of type IfcTimeSeriesDataTypeEnum - may not be null.
	* @param DataOrigin DEMANDED parameter of type IfcDataOriginEnum - may not be null.
	* @param UserDefinedDataOrigin OPTIONAL parameter of type IfcLabel
	* @param Unit OPTIONAL parameter of type IfcUnit
	**/
	public IfcTimeSeries(IfcLabel Name, IfcText Description, IfcDateTimeSelect StartTime, IfcDateTimeSelect EndTime, IfcTimeSeriesDataTypeEnum TimeSeriesDataType, IfcDataOriginEnum DataOrigin, IfcLabel UserDefinedDataOrigin, IfcUnit Unit)
	{
		this.Name = Name;
		this.Description = Description;
		this.StartTime = StartTime;
		this.EndTime = EndTime;
		this.TimeSeriesDataType = TimeSeriesDataType;
		this.DataOrigin = DataOrigin;
		this.UserDefinedDataOrigin = UserDefinedDataOrigin;
		this.Unit = Unit;
		resolveInverses();
	}

	/**
	 * This method initializes the IfcTimeSeries object using the given parameters.
	*
	* @param Name DEMANDED parameter of type IfcLabel - may not be null.
	* @param Description OPTIONAL parameter of type IfcText
	* @param StartTime DEMANDED parameter of type IfcDateTimeSelect - may not be null.
	* @param EndTime DEMANDED parameter of type IfcDateTimeSelect - may not be null.
	* @param TimeSeriesDataType DEMANDED parameter of type IfcTimeSeriesDataTypeEnum - may not be null.
	* @param DataOrigin DEMANDED parameter of type IfcDataOriginEnum - may not be null.
	* @param UserDefinedDataOrigin OPTIONAL parameter of type IfcLabel
	* @param Unit OPTIONAL parameter of type IfcUnit
	**/
	public void setParameters(IfcLabel Name, IfcText Description, IfcDateTimeSelect StartTime, IfcDateTimeSelect EndTime, IfcTimeSeriesDataTypeEnum TimeSeriesDataType, IfcDataOriginEnum DataOrigin, IfcLabel UserDefinedDataOrigin, IfcUnit Unit)
	{
		this.Name = Name;
		this.Description = Description;
		this.StartTime = StartTime;
		this.EndTime = EndTime;
		this.TimeSeriesDataType = TimeSeriesDataType;
		this.DataOrigin = DataOrigin;
		this.UserDefinedDataOrigin = UserDefinedDataOrigin;
		this.Unit = Unit;
		resolveInverses();
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void initialize(java.util.ArrayList<CloneableObject> parameters)
	{
		this.Name = (IfcLabel) parameters.get(0);
		this.Description = (IfcText) parameters.get(1);
		this.StartTime = (IfcDateTimeSelect) parameters.get(2);
		this.EndTime = (IfcDateTimeSelect) parameters.get(3);
		this.TimeSeriesDataType = (IfcTimeSeriesDataTypeEnum) parameters.get(4);
		this.DataOrigin = (IfcDataOriginEnum) parameters.get(5);
		this.UserDefinedDataOrigin = (IfcLabel) parameters.get(6);
		this.Unit = (IfcUnit) parameters.get(7);
		resolveInverses();
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void destruct()
	{
		listenerList = null;
		DocumentedBy_Inverse = null;
	}

	private void resolveInverses()
	{
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	String[] getNonInverseAttributeTypes()
	{
		return IfcTimeSeries.nonInverseAttributes;	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	private java.util.HashSet<String> getRedefinedDerivedAttributeTypes()
	{
		java.util.HashSet<String> redefinedDerivedAttributes = new java.util.HashSet<String>();
		return redefinedDerivedAttributes;	}

	/**
 * This method returns the object IFC  STEP representation. This method is called by the IfcModel object to write IFC STEP files.
	 *
	 * @return the IFC STEP representation of this object
	**/
	public String getStepLine()
	{
		String stepString = new String("#"+this.stepLineNumber+"= ");
		stepString = stepString.concat("IFCTIMESERIES(");
		if(getRedefinedDerivedAttributeTypes().contains("Name")) stepString = stepString.concat("*,");
		else{
		if(this.Name != null)		stepString = stepString.concat(((RootInterface)this.Name).getStepParameter(IfcLabel.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("Description")) stepString = stepString.concat("*,");
		else{
		if(this.Description != null)		stepString = stepString.concat(((RootInterface)this.Description).getStepParameter(IfcText.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("StartTime")) stepString = stepString.concat("*,");
		else{
		if(this.StartTime != null)		stepString = stepString.concat(((RootInterface)this.StartTime).getStepParameter(IfcDateTimeSelect.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("EndTime")) stepString = stepString.concat("*,");
		else{
		if(this.EndTime != null)		stepString = stepString.concat(((RootInterface)this.EndTime).getStepParameter(IfcDateTimeSelect.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("TimeSeriesDataType")) stepString = stepString.concat("*,");
		else{
		if(this.TimeSeriesDataType != null)		stepString = stepString.concat(((RootInterface)this.TimeSeriesDataType).getStepParameter(IfcTimeSeriesDataTypeEnum.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("DataOrigin")) stepString = stepString.concat("*,");
		else{
		if(this.DataOrigin != null)		stepString = stepString.concat(((RootInterface)this.DataOrigin).getStepParameter(IfcDataOriginEnum.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("UserDefinedDataOrigin")) stepString = stepString.concat("*,");
		else{
		if(this.UserDefinedDataOrigin != null)		stepString = stepString.concat(((RootInterface)this.UserDefinedDataOrigin).getStepParameter(IfcLabel.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("Unit")) stepString = stepString.concat("*);");
		else{
		if(this.Unit != null)		stepString = stepString.concat(((RootInterface)this.Unit).getStepParameter(IfcUnit.class.isInterface())+");");
		else		stepString = stepString.concat("$);");
		}
		return stepString;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	public String getStepParameter(boolean isSelectType)
	{
		return "#" + this.stepLineNumber;
	}

	/**
	 * This method returns the line number within a IFC  STEP representation. This method is called from other objects, where this one is referenced.
	 *
	 * @return the STEP line number
	**/
	public int getStepLineNumber()
	{
		return this.stepLineNumber;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void setStepLineNumber(int number)
	{
		this.stepLineNumber = number;
	}

	/**
	* This method returns a copy of the set of the DocumentedBy_Inverse attribute.
	*
	* @return a copy of the DocumentedBy_Inverse set
	**/
	public SET<IfcTimeSeriesReferenceRelationship> getDocumentedBy_Inverse()
	{
		if(this.DocumentedBy_Inverse != null)
			return new SET<IfcTimeSeriesReferenceRelationship>(this.DocumentedBy_Inverse);
		return null;
	}

	/**
	* This method sets the Name attribute to the given value.
	*
	* @param Name OPTIONAL value to set
	**/
	public void setName(IfcLabel Name)
	{
		this.Name = Name;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the Name attribute.
	*
	* @return the value of Name
	/**/
	public IfcLabel getName()
	{
		return this.Name;
	}

	/**
	* This method sets the Description attribute to the given value.
	*
	* @param Description DEMANDED value to set - may not be null
	**/
	public void setDescription(IfcText Description)
	{
		this.Description = Description;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the Description attribute.
	*
	* @return the value of Description
	/**/
	public IfcText getDescription()
	{
		return this.Description;
	}

	/**
	* This method sets the StartTime attribute to the given value.
	*
	* @param StartTime OPTIONAL value to set
	**/
	public void setStartTime(IfcDateTimeSelect StartTime)
	{
		this.StartTime = StartTime;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the StartTime attribute.
	*
	* @return the value of StartTime
	/**/
	public IfcDateTimeSelect getStartTime()
	{
		return this.StartTime;
	}

	/**
	* This method sets the EndTime attribute to the given value.
	*
	* @param EndTime OPTIONAL value to set
	**/
	public void setEndTime(IfcDateTimeSelect EndTime)
	{
		this.EndTime = EndTime;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the EndTime attribute.
	*
	* @return the value of EndTime
	/**/
	public IfcDateTimeSelect getEndTime()
	{
		return this.EndTime;
	}

	/**
	* This method sets the TimeSeriesDataType attribute to the given value.
	*
	* @param TimeSeriesDataType OPTIONAL value to set
	**/
	public void setTimeSeriesDataType(IfcTimeSeriesDataTypeEnum TimeSeriesDataType)
	{
		this.TimeSeriesDataType = TimeSeriesDataType;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the TimeSeriesDataType attribute.
	*
	* @return the value of TimeSeriesDataType
	/**/
	public IfcTimeSeriesDataTypeEnum getTimeSeriesDataType()
	{
		return this.TimeSeriesDataType;
	}

	/**
	* This method sets the DataOrigin attribute to the given value.
	*
	* @param DataOrigin OPTIONAL value to set
	**/
	public void setDataOrigin(IfcDataOriginEnum DataOrigin)
	{
		this.DataOrigin = DataOrigin;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the DataOrigin attribute.
	*
	* @return the value of DataOrigin
	/**/
	public IfcDataOriginEnum getDataOrigin()
	{
		return this.DataOrigin;
	}

	/**
	* This method sets the UserDefinedDataOrigin attribute to the given value.
	*
	* @param UserDefinedDataOrigin DEMANDED value to set - may not be null
	**/
	public void setUserDefinedDataOrigin(IfcLabel UserDefinedDataOrigin)
	{
		this.UserDefinedDataOrigin = UserDefinedDataOrigin;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the UserDefinedDataOrigin attribute.
	*
	* @return the value of UserDefinedDataOrigin
	/**/
	public IfcLabel getUserDefinedDataOrigin()
	{
		return this.UserDefinedDataOrigin;
	}

	/**
	* This method sets the Unit attribute to the given value.
	*
	* @param Unit DEMANDED value to set - may not be null
	**/
	public void setUnit(IfcUnit Unit)
	{
		this.Unit = Unit;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the Unit attribute.
	*
	* @return the value of Unit
	/**/
	public IfcUnit getUnit()
	{
		return this.Unit;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void setStepParameter(java.util.ArrayList<CloneableObject> parameter)
	{
		this.stepParameter = parameter;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	java.util.ArrayList<CloneableObject> getStepParameter()
	{
		return this.stepParameter;
	}

	/**
	 * This method registers an ObjectChangeListener to this object. An event is fired whenever one of its values was changed.
	 * 
	 *@param listener the listener to register
	**/
	public void addObjectChangeListener(ObjectChangeListener listener)
	{
		if (listenerList == null)	listenerList = new java.util.HashSet<ObjectChangeListener>(1,1);
		listenerList.add(listener);
	}

	/**
	 * This method unregisters an ObjectChangeListener from this object.
	 * 
	 *@param listener the listener to unregister
	**/
	public void removeObjectChangeListener(ObjectChangeListener listener)
	{
		if (listenerList == null)	return;
		listenerList.remove(listener);
		if (listenerList.size()==0) listenerList = null;
	}

	/**
	 * This method removes all currently registered ObjectChangeListeners from this object.
	**/
	public void removeAllObjectChangeListeners()
	{
		listenerList = null;
	}

	protected void fireChangeEvent()
	{
		if(listenerList == null) return;
		for(ObjectChangeListener listener : listenerList)
			listener.ifcModelObjectChange(this);
	}

	/**
	 * This method clones the object (deep cloning).
	 *
	 * @return the cloned object
	**/
	public abstract Object clone();

	/**
	 * This method copys the object as shallow copy (all referenced objects are remaining).
	 *
	 * @return the cloned object
	**/
	public abstract Object shallowCopy();

	/**
	* This method returns the objects standard description.
	*
	* @return the standard description
	**/
	public String toString()
	{
		return "#"+ this.getStepLineNumber() + " " + this.getClass().getSimpleName();
	}


}
