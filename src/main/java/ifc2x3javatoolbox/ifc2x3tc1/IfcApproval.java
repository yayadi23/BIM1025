/* Generated By: IFC Tools Project EXPRESS TO JAVA COMPILER: Do not edit this file!! */
package ifc2x3javatoolbox.ifc2x3tc1;
/**
 * This is a default implementation of the entity IfcApproval<br><br>
 *<br><br>
 * Copyright: CC BY-NC-SA 3.0 DE (cc) 2013 Eike Tauscher and Michael Theiler<br><br>
 * The whole package including this class is licensed under<br>
 * <a rel='license' href='http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.en/'>
 * Creative Commons Attribution-Non-Commercial-Share Alike 3.0 Germany</a>.<br><br>
 * If you are using the package or parts of it in any commercial way, a commercial license is required. 
 * Visit <a href='http://www.ifctoolsproject.com'>http://www.ifctoolsproject.com</a> for more information
 * or contact us directly: <a href='mailto:info@ifctoolsproject.com'>info@ifctoolsproject.com</a><br>
 */
public class IfcApproval extends InternalAccessClass implements ClassInterface
{
	private static final String[] nonInverseAttributes = new String[]{"IfcText","IfcDateTimeSelect","IfcLabel","IfcLabel","IfcText","IfcLabel","IfcIdentifier"};
	private java.util.ArrayList<CloneableObject> stepParameter = null;
	private java.util.HashSet<ObjectChangeListener> listenerList = null;
	protected int stepLineNumber;
	/** Description is an OPTIONAL attribute**/
	protected IfcText Description;
	/** ApprovalDateTime is an DEMANDED attribute - may not be null**/
	protected IfcDateTimeSelect ApprovalDateTime;
	/** ApprovalStatus is an OPTIONAL attribute**/
	protected IfcLabel ApprovalStatus;
	/** ApprovalLevel is an OPTIONAL attribute**/
	protected IfcLabel ApprovalLevel;
	/** ApprovalQualifier is an OPTIONAL attribute**/
	protected IfcText ApprovalQualifier;
	/** Name is an DEMANDED attribute - may not be null**/
	protected IfcLabel Name;
	/** Identifier is an DEMANDED attribute - may not be null**/
	protected IfcIdentifier Identifier;
	protected SET<IfcApprovalActorRelationship> Actors_Inverse;
	protected SET<IfcApprovalRelationship> IsRelatedWith_Inverse;
	protected SET<IfcApprovalRelationship> Relates_Inverse;
	/**
	* The default constructor.
	**/
	public IfcApproval(){}

	private static final String[] attributes = new String[]{"Description","ApprovalDateTime","ApprovalStatus","ApprovalLevel","ApprovalQualifier"
	,"Name","Identifier"};

	public String[] getAttributes() {
		return IfcApproval.attributes;
	}

	/**
	* Constructs a new IfcApproval object using the given parameters.
	*
	* @param Description OPTIONAL parameter of type IfcText
	* @param ApprovalDateTime DEMANDED parameter of type IfcDateTimeSelect - may not be null.
	* @param ApprovalStatus OPTIONAL parameter of type IfcLabel
	* @param ApprovalLevel OPTIONAL parameter of type IfcLabel
	* @param ApprovalQualifier OPTIONAL parameter of type IfcText
	* @param Name DEMANDED parameter of type IfcLabel - may not be null.
	* @param Identifier DEMANDED parameter of type IfcIdentifier - may not be null.
	**/
	public IfcApproval(IfcText Description, IfcDateTimeSelect ApprovalDateTime, IfcLabel ApprovalStatus, IfcLabel ApprovalLevel, IfcText ApprovalQualifier, IfcLabel Name, IfcIdentifier Identifier)
	{
		this.Description = Description;
		this.ApprovalDateTime = ApprovalDateTime;
		this.ApprovalStatus = ApprovalStatus;
		this.ApprovalLevel = ApprovalLevel;
		this.ApprovalQualifier = ApprovalQualifier;
		this.Name = Name;
		this.Identifier = Identifier;
		resolveInverses();
	}

	/**
	 * This method initializes the IfcApproval object using the given parameters.
	*
	* @param Description OPTIONAL parameter of type IfcText
	* @param ApprovalDateTime DEMANDED parameter of type IfcDateTimeSelect - may not be null.
	* @param ApprovalStatus OPTIONAL parameter of type IfcLabel
	* @param ApprovalLevel OPTIONAL parameter of type IfcLabel
	* @param ApprovalQualifier OPTIONAL parameter of type IfcText
	* @param Name DEMANDED parameter of type IfcLabel - may not be null.
	* @param Identifier DEMANDED parameter of type IfcIdentifier - may not be null.
	**/
	public void setParameters(IfcText Description, IfcDateTimeSelect ApprovalDateTime, IfcLabel ApprovalStatus, IfcLabel ApprovalLevel, IfcText ApprovalQualifier, IfcLabel Name, IfcIdentifier Identifier)
	{
		this.Description = Description;
		this.ApprovalDateTime = ApprovalDateTime;
		this.ApprovalStatus = ApprovalStatus;
		this.ApprovalLevel = ApprovalLevel;
		this.ApprovalQualifier = ApprovalQualifier;
		this.Name = Name;
		this.Identifier = Identifier;
		resolveInverses();
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void initialize(java.util.ArrayList<CloneableObject> parameters)
	{
		this.Description = (IfcText) parameters.get(0);
		this.ApprovalDateTime = (IfcDateTimeSelect) parameters.get(1);
		this.ApprovalStatus = (IfcLabel) parameters.get(2);
		this.ApprovalLevel = (IfcLabel) parameters.get(3);
		this.ApprovalQualifier = (IfcText) parameters.get(4);
		this.Name = (IfcLabel) parameters.get(5);
		this.Identifier = (IfcIdentifier) parameters.get(6);
		resolveInverses();
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void destruct()
	{
		listenerList = null;
		Actors_Inverse = null;
		IsRelatedWith_Inverse = null;
		Relates_Inverse = null;
	}

	private void resolveInverses()
	{
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	String[] getNonInverseAttributeTypes()
	{
		return IfcApproval.nonInverseAttributes;	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	private java.util.HashSet<String> getRedefinedDerivedAttributeTypes()
	{
		java.util.HashSet<String> redefinedDerivedAttributes = new java.util.HashSet<String>();
		return redefinedDerivedAttributes;	}

	/**
 * This method returns the object IFC  STEP representation. This method is called by the IfcModel object to write IFC STEP files.
	 *
	 * @return the IFC STEP representation of this object
	**/
	public String getStepLine()
	{
		String stepString = new String("#"+this.stepLineNumber+"= ");
		stepString = stepString.concat("IFCAPPROVAL(");
		if(getRedefinedDerivedAttributeTypes().contains("Description")) stepString = stepString.concat("*,");
		else{
		if(this.Description != null)		stepString = stepString.concat(((RootInterface)this.Description).getStepParameter(IfcText.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("ApprovalDateTime")) stepString = stepString.concat("*,");
		else{
		if(this.ApprovalDateTime != null)		stepString = stepString.concat(((RootInterface)this.ApprovalDateTime).getStepParameter(IfcDateTimeSelect.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("ApprovalStatus")) stepString = stepString.concat("*,");
		else{
		if(this.ApprovalStatus != null)		stepString = stepString.concat(((RootInterface)this.ApprovalStatus).getStepParameter(IfcLabel.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("ApprovalLevel")) stepString = stepString.concat("*,");
		else{
		if(this.ApprovalLevel != null)		stepString = stepString.concat(((RootInterface)this.ApprovalLevel).getStepParameter(IfcLabel.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("ApprovalQualifier")) stepString = stepString.concat("*,");
		else{
		if(this.ApprovalQualifier != null)		stepString = stepString.concat(((RootInterface)this.ApprovalQualifier).getStepParameter(IfcText.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("Name")) stepString = stepString.concat("*,");
		else{
		if(this.Name != null)		stepString = stepString.concat(((RootInterface)this.Name).getStepParameter(IfcLabel.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("Identifier")) stepString = stepString.concat("*);");
		else{
		if(this.Identifier != null)		stepString = stepString.concat(((RootInterface)this.Identifier).getStepParameter(IfcIdentifier.class.isInterface())+");");
		else		stepString = stepString.concat("$);");
		}
		return stepString;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	public String getStepParameter(boolean isSelectType)
	{
		return "#" + this.stepLineNumber;
	}

	/**
	 * This method returns the line number within a IFC  STEP representation. This method is called from other objects, where this one is referenced.
	 *
	 * @return the STEP line number
	**/
	public int getStepLineNumber()
	{
		return this.stepLineNumber;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void setStepLineNumber(int number)
	{
		this.stepLineNumber = number;
	}

	/**
	* This method returns a copy of the set of the Actors_Inverse attribute.
	*
	* @return a copy of the Actors_Inverse set
	**/
	public SET<IfcApprovalActorRelationship> getActors_Inverse()
	{
		if(this.Actors_Inverse != null)
			return new SET<IfcApprovalActorRelationship>(this.Actors_Inverse);
		return null;
	}

	/**
	* This method returns a copy of the set of the IsRelatedWith_Inverse attribute.
	*
	* @return a copy of the IsRelatedWith_Inverse set
	**/
	public SET<IfcApprovalRelationship> getIsRelatedWith_Inverse()
	{
		if(this.IsRelatedWith_Inverse != null)
			return new SET<IfcApprovalRelationship>(this.IsRelatedWith_Inverse);
		return null;
	}

	/**
	* This method returns a copy of the set of the Relates_Inverse attribute.
	*
	* @return a copy of the Relates_Inverse set
	**/
	public SET<IfcApprovalRelationship> getRelates_Inverse()
	{
		if(this.Relates_Inverse != null)
			return new SET<IfcApprovalRelationship>(this.Relates_Inverse);
		return null;
	}

	/**
	* This method sets the Description attribute to the given value.
	*
	* @param Description DEMANDED value to set - may not be null
	**/
	public void setDescription(IfcText Description)
	{
		this.Description = Description;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the Description attribute.
	*
	* @return the value of Description
	/**/
	public IfcText getDescription()
	{
		return this.Description;
	}

	/**
	* This method sets the ApprovalDateTime attribute to the given value.
	*
	* @param ApprovalDateTime OPTIONAL value to set
	**/
	public void setApprovalDateTime(IfcDateTimeSelect ApprovalDateTime)
	{
		this.ApprovalDateTime = ApprovalDateTime;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the ApprovalDateTime attribute.
	*
	* @return the value of ApprovalDateTime
	/**/
	public IfcDateTimeSelect getApprovalDateTime()
	{
		return this.ApprovalDateTime;
	}

	/**
	* This method sets the ApprovalStatus attribute to the given value.
	*
	* @param ApprovalStatus DEMANDED value to set - may not be null
	**/
	public void setApprovalStatus(IfcLabel ApprovalStatus)
	{
		this.ApprovalStatus = ApprovalStatus;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the ApprovalStatus attribute.
	*
	* @return the value of ApprovalStatus
	/**/
	public IfcLabel getApprovalStatus()
	{
		return this.ApprovalStatus;
	}

	/**
	* This method sets the ApprovalLevel attribute to the given value.
	*
	* @param ApprovalLevel DEMANDED value to set - may not be null
	**/
	public void setApprovalLevel(IfcLabel ApprovalLevel)
	{
		this.ApprovalLevel = ApprovalLevel;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the ApprovalLevel attribute.
	*
	* @return the value of ApprovalLevel
	/**/
	public IfcLabel getApprovalLevel()
	{
		return this.ApprovalLevel;
	}

	/**
	* This method sets the ApprovalQualifier attribute to the given value.
	*
	* @param ApprovalQualifier DEMANDED value to set - may not be null
	**/
	public void setApprovalQualifier(IfcText ApprovalQualifier)
	{
		this.ApprovalQualifier = ApprovalQualifier;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the ApprovalQualifier attribute.
	*
	* @return the value of ApprovalQualifier
	/**/
	public IfcText getApprovalQualifier()
	{
		return this.ApprovalQualifier;
	}

	/**
	* This method sets the Name attribute to the given value.
	*
	* @param Name OPTIONAL value to set
	**/
	public void setName(IfcLabel Name)
	{
		this.Name = Name;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the Name attribute.
	*
	* @return the value of Name
	/**/
	public IfcLabel getName()
	{
		return this.Name;
	}

	/**
	* This method sets the Identifier attribute to the given value.
	*
	* @param Identifier OPTIONAL value to set
	**/
	public void setIdentifier(IfcIdentifier Identifier)
	{
		this.Identifier = Identifier;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the Identifier attribute.
	*
	* @return the value of Identifier
	/**/
	public IfcIdentifier getIdentifier()
	{
		return this.Identifier;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void setStepParameter(java.util.ArrayList<CloneableObject> parameter)
	{
		this.stepParameter = parameter;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	java.util.ArrayList<CloneableObject> getStepParameter()
	{
		return this.stepParameter;
	}

	/**
	 * This method registers an ObjectChangeListener to this object. An event is fired whenever one of its values was changed.
	 * 
	 *@param listener the listener to register
	**/
	public void addObjectChangeListener(ObjectChangeListener listener)
	{
		if (listenerList == null)	listenerList = new java.util.HashSet<ObjectChangeListener>(1,1);
		listenerList.add(listener);
	}

	/**
	 * This method unregisters an ObjectChangeListener from this object.
	 * 
	 *@param listener the listener to unregister
	**/
	public void removeObjectChangeListener(ObjectChangeListener listener)
	{
		if (listenerList == null)	return;
		listenerList.remove(listener);
		if (listenerList.size()==0) listenerList = null;
	}

	/**
	 * This method removes all currently registered ObjectChangeListeners from this object.
	**/
	public void removeAllObjectChangeListeners()
	{
		listenerList = null;
	}

	protected void fireChangeEvent()
	{
		if(listenerList == null) return;
		for(ObjectChangeListener listener : listenerList)
			listener.ifcModelObjectChange(this);
	}

	/**
	 * This method clones the object (deep cloning).
	 *
	 * @return the cloned object
	**/
	public Object clone()
	{
		IfcApproval ifcApproval = new IfcApproval();
		if(this.Description != null)
			ifcApproval.setDescription((IfcText)this.Description.clone());
		if(this.ApprovalDateTime != null)
			ifcApproval.setApprovalDateTime((IfcDateTimeSelect)this.ApprovalDateTime.clone());
		if(this.ApprovalStatus != null)
			ifcApproval.setApprovalStatus((IfcLabel)this.ApprovalStatus.clone());
		if(this.ApprovalLevel != null)
			ifcApproval.setApprovalLevel((IfcLabel)this.ApprovalLevel.clone());
		if(this.ApprovalQualifier != null)
			ifcApproval.setApprovalQualifier((IfcText)this.ApprovalQualifier.clone());
		if(this.Name != null)
			ifcApproval.setName((IfcLabel)this.Name.clone());
		if(this.Identifier != null)
			ifcApproval.setIdentifier((IfcIdentifier)this.Identifier.clone());
		return ifcApproval;
	}

	/**
	 * This method copys the object as shallow copy (all referenced objects are remaining).
	 *
	 * @return the cloned object
	**/
	public Object shallowCopy()
	{
		IfcApproval ifcApproval = new IfcApproval();
		if(this.Description != null)
			ifcApproval.setDescription(this.Description);
		if(this.ApprovalDateTime != null)
			ifcApproval.setApprovalDateTime(this.ApprovalDateTime);
		if(this.ApprovalStatus != null)
			ifcApproval.setApprovalStatus(this.ApprovalStatus);
		if(this.ApprovalLevel != null)
			ifcApproval.setApprovalLevel(this.ApprovalLevel);
		if(this.ApprovalQualifier != null)
			ifcApproval.setApprovalQualifier(this.ApprovalQualifier);
		if(this.Name != null)
			ifcApproval.setName(this.Name);
		if(this.Identifier != null)
			ifcApproval.setIdentifier(this.Identifier);
		return ifcApproval;
	}

	/**
	* This method returns the objects standard description.
	*
	* @return the standard description
	**/
	public String toString()
	{
		return "#"+ this.getStepLineNumber() + " " + this.getClass().getSimpleName();
	}


}
