/* Generated By: IFC Tools Project EXPRESS TO JAVA COMPILER: Do not edit this file!! */
package ifc2x3javatoolbox.ifc2x3tc1;
/**
 * This is a default implementation of the entity IfcTimeSeriesReferenceRelationship<br><br>
 *<br><br>
 * Copyright: CC BY-NC-SA 3.0 DE (cc) 2013 Eike Tauscher and Michael Theiler<br><br>
 * The whole package including this class is licensed under<br>
 * <a rel='license' href='http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.en/'>
 * Creative Commons Attribution-Non-Commercial-Share Alike 3.0 Germany</a>.<br><br>
 * If you are using the package or parts of it in any commercial way, a commercial license is required. 
 * Visit <a href='http://www.ifctoolsproject.com'>http://www.ifctoolsproject.com</a> for more information
 * or contact us directly: <a href='mailto:info@ifctoolsproject.com'>info@ifctoolsproject.com</a><br>
 */
public class IfcTimeSeriesReferenceRelationship extends InternalAccessClass implements ClassInterface
{
	private static final String[] nonInverseAttributes = new String[]{"IfcTimeSeries","SET<IfcDocumentSelect>"};
	private java.util.ArrayList<CloneableObject> stepParameter = null;
	private java.util.HashSet<ObjectChangeListener> listenerList = null;
	protected int stepLineNumber;
	/** ReferencedTimeSeries is an DEMANDED attribute - may not be null**/
	protected IfcTimeSeries ReferencedTimeSeries;
	/** TimeSeriesReferences is an DEMANDED attribute - may not be null**/
	protected SET<IfcDocumentSelect> TimeSeriesReferences;
	/**
	* The default constructor.
	**/
	public IfcTimeSeriesReferenceRelationship(){}

	private static final String[] attributes = new String[]{"ReferencedTimeSeries","TimeSeriesReferences"};

	public String[] getAttributes(){
		return IfcTimeSeriesReferenceRelationship.attributes;
	}

	/**
	* Constructs a new IfcTimeSeriesReferenceRelationship object using the given parameters.
	*
	* @param ReferencedTimeSeries DEMANDED parameter of type IfcTimeSeries - may not be null.
	* @param TimeSeriesReferences DEMANDED parameter of type SET<IfcDocumentSelect> - may not be null.
	**/
	public IfcTimeSeriesReferenceRelationship(IfcTimeSeries ReferencedTimeSeries, SET<IfcDocumentSelect> TimeSeriesReferences)
	{
		this.ReferencedTimeSeries = ReferencedTimeSeries;
		this.TimeSeriesReferences = TimeSeriesReferences;
		resolveInverses();
	}

	/**
	 * This method initializes the IfcTimeSeriesReferenceRelationship object using the given parameters.
	*
	* @param ReferencedTimeSeries DEMANDED parameter of type IfcTimeSeries - may not be null.
	* @param TimeSeriesReferences DEMANDED parameter of type SET<IfcDocumentSelect> - may not be null.
	**/
	public void setParameters(IfcTimeSeries ReferencedTimeSeries, SET<IfcDocumentSelect> TimeSeriesReferences)
	{
		this.ReferencedTimeSeries = ReferencedTimeSeries;
		this.TimeSeriesReferences = TimeSeriesReferences;
		resolveInverses();
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	@SuppressWarnings("unchecked")
	void initialize(java.util.ArrayList<CloneableObject> parameters)
	{
		this.ReferencedTimeSeries = (IfcTimeSeries) parameters.get(0);
		this.TimeSeriesReferences = (SET<IfcDocumentSelect>) parameters.get(1);
		resolveInverses();
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void destruct()
	{
		listenerList = null;
	}

	private void resolveInverses()
	{
		if(ReferencedTimeSeries != null)
		{
				if(ReferencedTimeSeries.DocumentedBy_Inverse == null)
				{
					ReferencedTimeSeries.DocumentedBy_Inverse = new SET<IfcTimeSeriesReferenceRelationship>();
				}
				ReferencedTimeSeries.DocumentedBy_Inverse.add(this);
		}
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	String[] getNonInverseAttributeTypes()
	{
		return IfcTimeSeriesReferenceRelationship.nonInverseAttributes;	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	private java.util.HashSet<String> getRedefinedDerivedAttributeTypes()
	{
		java.util.HashSet<String> redefinedDerivedAttributes = new java.util.HashSet<String>();
		return redefinedDerivedAttributes;	}

	/**
 * This method returns the object IFC  STEP representation. This method is called by the IfcModel object to write IFC STEP files.
	 *
	 * @return the IFC STEP representation of this object
	**/
	public String getStepLine()
	{
		String stepString = new String("#"+this.stepLineNumber+"= ");
		stepString = stepString.concat("IFCTIMESERIESREFERENCERELATIONSHIP(");
		if(getRedefinedDerivedAttributeTypes().contains("ReferencedTimeSeries")) stepString = stepString.concat("*,");
		else{
		if(this.ReferencedTimeSeries != null)		stepString = stepString.concat(((RootInterface)this.ReferencedTimeSeries).getStepParameter(IfcTimeSeries.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("TimeSeriesReferences")) stepString = stepString.concat("*);");
		else{
		if(this.TimeSeriesReferences != null)		stepString = stepString.concat(((RootInterface)this.TimeSeriesReferences).getStepParameter(IfcDocumentSelect.class.isInterface())+");");
		else		stepString = stepString.concat("$);");
		}
		return stepString;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	public String getStepParameter(boolean isSelectType)
	{
		return "#" + this.stepLineNumber;
	}

	/**
	 * This method returns the line number within a IFC  STEP representation. This method is called from other objects, where this one is referenced.
	 *
	 * @return the STEP line number
	**/
	public int getStepLineNumber()
	{
		return this.stepLineNumber;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void setStepLineNumber(int number)
	{
		this.stepLineNumber = number;
	}

	/**
	* This method sets the ReferencedTimeSeries attribute to the given value.
	*
	* @param ReferencedTimeSeries OPTIONAL value to set
	**/
	public void setReferencedTimeSeries(IfcTimeSeries ReferencedTimeSeries)
	{
		synchronizeInversesRemoveReferencedTimeSeries(this.ReferencedTimeSeries);
		this.ReferencedTimeSeries = ReferencedTimeSeries;
		synchronizeInversesAddReferencedTimeSeries(this.ReferencedTimeSeries);
		fireChangeEvent();
	}

	/**
	* This method returns the value of the ReferencedTimeSeries attribute.
	*
	* @return the value of ReferencedTimeSeries
	/**/
	public IfcTimeSeries getReferencedTimeSeries()
	{
		return this.ReferencedTimeSeries;
	}

	private void synchronizeInversesAddReferencedTimeSeries(IfcTimeSeries ReferencedTimeSeries)
	{
		if(ReferencedTimeSeries != null)
		{
				if(ReferencedTimeSeries.DocumentedBy_Inverse == null)
				{
					ReferencedTimeSeries.DocumentedBy_Inverse = new SET<IfcTimeSeriesReferenceRelationship>();
				}
				ReferencedTimeSeries.DocumentedBy_Inverse.add(this);
		}
	}

	private void synchronizeInversesRemoveReferencedTimeSeries(IfcTimeSeries ReferencedTimeSeries)
	{
		if(ReferencedTimeSeries != null)
		{
				if(ReferencedTimeSeries.DocumentedBy_Inverse != null)
				{
					ReferencedTimeSeries.DocumentedBy_Inverse.remove(this);
				}
		}
	}

	/**
	* This method sets the TimeSeriesReferences attribute to the given value.
	*
	* @param TimeSeriesReferences OPTIONAL value to set
	**/
	public void setTimeSeriesReferences(SET<IfcDocumentSelect> TimeSeriesReferences)
	{
		this.TimeSeriesReferences = TimeSeriesReferences;
		fireChangeEvent();
	}

	/**
	* This method returns a copy of the set of the TimeSeriesReferences attribute.
	*
	* @return a copy of the TimeSeriesReferences set
	**/
	public SET<IfcDocumentSelect> getTimeSeriesReferences()
	{
		if(this.TimeSeriesReferences != null)
			return new SET<IfcDocumentSelect>(this.TimeSeriesReferences);
		return null;
	}

	/**
	* This method adds an IfcDocumentSelect object to the TimeSeriesReferences set.
	* @param TimeSeriesReferences element to be appended to this set.
	**/
	public void addTimeSeriesReferences(IfcDocumentSelect TimeSeriesReferences)
	{
		if(this.TimeSeriesReferences == null)
			this.TimeSeriesReferences = new SET<IfcDocumentSelect>();
		this.TimeSeriesReferences.add(TimeSeriesReferences);
		fireChangeEvent();
	}

	/**
	* This method adds a collection of IfcDocumentSelect objects to the TimeSeriesReferences set.
	* @param TimeSeriesReferences collection containing elements to be added to this set.
	**/
	public void addAllTimeSeriesReferences(java.util.Collection<IfcDocumentSelect> TimeSeriesReferences)
	{
		if(this.TimeSeriesReferences == null)
			this.TimeSeriesReferences = new SET<IfcDocumentSelect>();
		this.TimeSeriesReferences.addAll(TimeSeriesReferences);
		fireChangeEvent();
	}

	/**
	* This method removes all elements from the TimeSeriesReferences set.
	**/
	public void clearTimeSeriesReferences()
	{
		if(this.TimeSeriesReferences != null)
		{
			this.TimeSeriesReferences.clear();
			fireChangeEvent();
		}
	}

	/**
	* This method removes an IfcDocumentSelect object from the TimeSeriesReferences set.
	* @param TimeSeriesReferences element to be removed from this set.
	**/
	public void removeTimeSeriesReferences(IfcDocumentSelect TimeSeriesReferences)
	{
		if(this.TimeSeriesReferences != null)
		{
			this.TimeSeriesReferences.remove(TimeSeriesReferences);
			fireChangeEvent();
		}
	}

	/**
	* This method removes a collection of IfcDocumentSelect objects from the TimeSeriesReferences set.
	* @param TimeSeriesReferences collection containing elements to be removed from this set.
	**/
	public void removeAllTimeSeriesReferences(java.util.Collection<IfcDocumentSelect> TimeSeriesReferences)
	{
		if(this.TimeSeriesReferences != null)
		{
			this.TimeSeriesReferences.removeAll(TimeSeriesReferences);
			fireChangeEvent();
		}
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void setStepParameter(java.util.ArrayList<CloneableObject> parameter)
	{
		this.stepParameter = parameter;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	java.util.ArrayList<CloneableObject> getStepParameter()
	{
		return this.stepParameter;
	}

	/**
	 * This method registers an ObjectChangeListener to this object. An event is fired whenever one of its values was changed.
	 * 
	 *@param listener the listener to register
	**/
	public void addObjectChangeListener(ObjectChangeListener listener)
	{
		if (listenerList == null)	listenerList = new java.util.HashSet<ObjectChangeListener>(1,1);
		listenerList.add(listener);
	}

	/**
	 * This method unregisters an ObjectChangeListener from this object.
	 * 
	 *@param listener the listener to unregister
	**/
	public void removeObjectChangeListener(ObjectChangeListener listener)
	{
		if (listenerList == null)	return;
		listenerList.remove(listener);
		if (listenerList.size()==0) listenerList = null;
	}

	/**
	 * This method removes all currently registered ObjectChangeListeners from this object.
	**/
	public void removeAllObjectChangeListeners()
	{
		listenerList = null;
	}

	protected void fireChangeEvent()
	{
		if(listenerList == null) return;
		for(ObjectChangeListener listener : listenerList)
			listener.ifcModelObjectChange(this);
	}

	/**
	 * This method clones the object (deep cloning).
	 *
	 * @return the cloned object
	**/
	@SuppressWarnings("unchecked")
	public Object clone()
	{
		IfcTimeSeriesReferenceRelationship ifcTimeSeriesReferenceRelationship = new IfcTimeSeriesReferenceRelationship();
		if(this.ReferencedTimeSeries != null)
			ifcTimeSeriesReferenceRelationship.setReferencedTimeSeries((IfcTimeSeries)this.ReferencedTimeSeries.clone());
		if(this.TimeSeriesReferences != null)
			ifcTimeSeriesReferenceRelationship.setTimeSeriesReferences((SET<IfcDocumentSelect>)this.TimeSeriesReferences.clone());
		return ifcTimeSeriesReferenceRelationship;
	}

	/**
	 * This method copys the object as shallow copy (all referenced objects are remaining).
	 *
	 * @return the cloned object
	**/
	public Object shallowCopy()
	{
		IfcTimeSeriesReferenceRelationship ifcTimeSeriesReferenceRelationship = new IfcTimeSeriesReferenceRelationship();
		if(this.ReferencedTimeSeries != null)
			ifcTimeSeriesReferenceRelationship.setReferencedTimeSeries(this.ReferencedTimeSeries);
		if(this.TimeSeriesReferences != null)
			ifcTimeSeriesReferenceRelationship.setTimeSeriesReferences(this.TimeSeriesReferences);
		return ifcTimeSeriesReferenceRelationship;
	}

	/**
	* This method returns the objects standard description.
	*
	* @return the standard description
	**/
	public String toString()
	{
		return "#"+ this.getStepLineNumber() + " " + this.getClass().getSimpleName();
	}


}
