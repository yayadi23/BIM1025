/* Generated By: IFC Tools Project EXPRESS TO JAVA COMPILER: Do not edit this file!! */
package ifc2x3javatoolbox.ifc2x3tc1;
/**
 * Default implementation of BINARY type.
 *
 *<br><br>
 * Copyright: CC BY-NC-SA 3.0 DE (cc) 2013 Eike Tauscher and Michael Theiler<br><br>
 * The whole package including this class is licensed under<br>
 * <a rel='license' href='http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.en/'>
 * Creative Commons Attribution-Non-Commercial-Share Alike 3.0 Germany</a>.<br><br>
 * If you are using the package or parts of it in any commercial way, a commercial license is required. 
 * Visit <a href='http://www.ifctoolsproject.com'>http://www.ifctoolsproject.com</a> for more information
 * or contact us directly: <a href='mailto:info@ifctoolsproject.com'>info@ifctoolsproject.com</a><br>
 */
public class BINARY implements RootInterface
{
	public static long counter = 0;
	public Integer value = null;

	/**
	 * Constructs a new BINARY object. The default value is null.
	 */
	public BINARY()
	{
		counter++;
	}

	/**
	 * Constructs a new BINARY object using the given value.
	 * @param value
	 *            the value
	 */
	public BINARY(int value)
	{
		this.value = value;
		counter++;
	}
	
	/**
	 * Constructs a new BINARY object using the given value.
	 * @param stepValue the encoded step value as String e.g. 111011 as "23B" according to ISO 10303-21.
	 */
	public BINARY(String stepValue)
	{
		this.value = decode(stepValue);
		counter++;
	}
	
	public Integer getValue()
	{
		return this.value;
	}
	
	public String getValueAsString()
	{
		return Integer.toBinaryString(this.value);
	}

	/**
	 * This method sets the value of this object.
	 * @param value
	 *            the value to set
	 */
	public void setValue(int value) {
		this.value = value;
	}
	
	/**
	 * This method sets the value of this object.
	 * @param stepValue the encoded step value as String e.g. 111011 as "23B" according to ISO 10303-21.
	 */
	public void setValue(String stepValue) {
		this.value = decode(stepValue);
	}
	
	/**
	 * This method decodes the STEP BINARY String representation into Integer.
	 * @param stepValue the STEP String according to ISO 10303-21
	 * @return the corresponding Integer 
	 */
	private Integer decode(String stepValue)
	{
		if (stepValue.length() == 1) return null;
		else return Integer.parseInt(stepValue.substring(1), 16);
	}

	/**
	 * This method sets the value of this object.
	 * @param value
	 *            the value to set
	 */
	public void setValue(BINARY value) {
		this.value = value.value;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	 **/
	public String getStepParameter(boolean isSelectType) {
		if (this.value == null)	return "0";
		String encodedString = "0";
		String binary = Integer.toBinaryString(value);
		int n = binary.length();
		int fillBits = 4 - n % 4;
		if (fillBits == 4)
			encodedString = "" + fillBits;
		return encodedString.concat(Integer.toHexString(value).toUpperCase());
	}

	/**
	 * This method has no use for simple types.
	 * @return null
	 **/
	public String getStepLine() {
		return null;
	}

	/**
	 * This method clones the object (deep cloning).
	 * @return the cloned object
	 **/
	public Object clone() {
		BINARY binary = new BINARY(this.value);
		return binary;
	}

	/**
	 * This method returns the objects value as String representation.
	 * @return the value as String representation
	 */
	public String toString() {
		return getValueAsString();
	}
}
